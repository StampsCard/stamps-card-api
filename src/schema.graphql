scalar DateTime
scalar Date
scalar Time

# import User from "./generated/prisma.graphql"
# import Business from "./generated/prisma.graphql"
# import BusinessType from "./generated/prisma.graphql"
# import StampCard from "./generated/prisma.graphql"
# import Purchase from "./generated/prisma.graphql"

type Query {
  users: [User!]!
  user(id: ID!): User!
  login(email: String!, password: String!): User!

  businesses: [Business!]!
  business(id: ID!): Business!

  businessType(id: ID!): BusinessType!
  businessTypeByName(name: String!): BusinessType

  stampCards: [StampCard!]!
  stampCard(id: ID!): StampCard!

  purchases: [Purchase!]!
  purchase(id: ID!): Purchase!
}

type Mutation {
  createUser(username: String!, email: String!, password: String!, firstName: String, lastName: String): User!
  updateUser(id: ID!, username: String!, email: String!, password: String!, firstName: String, lastName: String): User!
  deleteUser(id: ID!): User!

  createBusiness(name: String!, categoryName: String!, categoryDescription: String): Business!
  updateBusiness(id: ID!, name: String!, categoryName: String!, categoryDescription: String): Business!
  deleteBusiness(id: ID!): Business!

  createBusinessType(name: String!, description: String): BusinessType!

  createStampCard(stamp_price: Float!, user_id: ID!, business_id: ID!, total: Int!): StampCard!
  updateStampCard(id: ID!, stamp_price: Float!, user_id: String!, business_id: String!, total: Int!): StampCard!
  deleteStampCard(id: ID!): StampCard!

  createPurchase(amount: Float!, stamps: Int!, concept: String!, user_id: ID!, stamp_id: ID!): Purchase!

}